from PIL import Image
import numpy as np

def encrypt_image(input_path, output_path, key):
    """Encrypt an image by modifying its pixel values."""
    image = Image.open(input_path)
    pixels = np.array(image)
    
    # Apply encryption (simple XOR operation with the key)
    encrypted_pixels = pixels ^ key
    
    encrypted_image = Image.fromarray(encrypted_pixels.astype('uint8'))
    encrypted_image.save(output_path)
    print(f"Image encrypted and saved to {output_path}")

def decrypt_image(input_path, output_path, key):
    """Decrypt an image by reversing the encryption process."""
    image = Image.open(input_path)
    pixels = np.array(image)
    
    # Reverse the encryption
    decrypted_pixels = pixels ^ key
    
    decrypted_image = Image.fromarray(decrypted_pixels.astype('uint8'))
    decrypted_image.save(output_path)
    print(f"Image decrypted and saved to {output_path}")

def main():
    print("Simple Image Encryption Tool")
    print("1. Encrypt Image")
    print("2. Decrypt Image")
    choice = input("Choose an option (1 or 2): ")

    if choice not in ['1', '2']:
        print("Invalid choice. Please select 1 or 2.")
        return

    input_path = input("Enter the path to the input image: ")
    output_path = input("Enter the path to save the output image: ")
    key = int(input("Enter a numeric key (0-255): "))

    if not (0 <= key <= 255):
        print("Key must be a number between 0 and 255.")
        return

    if choice == '1':
        encrypt_image(input_path, output_path, key)
    elif choice == '2':
        decrypt_image(input_path, output_path, key)

if __name__ == "__main__":
    main()
